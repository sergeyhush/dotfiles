#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  <
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
set -g mode-keys vi

############################################################################
# Set prefix to C-b
############################################################################
unbind C-b # unbind default prefix
set-option -g prefix C-Space
bind-key C-Space send-prefix

############################################################################
# Global options
############################################################################
# Add truecolor support
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# Force 256color terminal (with true color capabilities)
set -g default-terminal "screen-256color"
set -sg terminal-overrides ",*:RGB"
# set -as terminal-features ",xterm-256color:RGB"

set -s focus-events on

set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key


############################################################################
# Display
############################################################################
set -g base-index 1        # start windows numbering at 1
setw -g pane-base-index 1  # make pane numbering consistent with windows

set -g automatic-rename on # automatically set window title
set -g renumber-windows on   # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 5 # redraw status line every 5 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

# vi movement keys
set-option -g status-keys vi
set-window-option -g mode-keys vi

set -g mouse on            # handling mouse
set -s escape-time 10      # faster command sequences
set -sg repeat-time 600    # increase repeat timeout
set -g set-clipboard on    # enable internal clipboard
set -g escape-time 10      # faster command sequences
set -g history-limit 10000 # increase scrollback history


############################################################################
# Status Bar
############################################################################
set-option -g status on
set -g status-style fg=black,bright,bg=default
set -g status-position top
set -g status-justify left
set -g status-right-length 100

############################################################################
# Bindings
############################################################################

# use vim motion keys while in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

bind | split-window -h # split window horizontally
bind - split-window -v # split window vertically

bind-key -n Bspace send-keys C-h

# open tmux.conf in a separate window
bind e new-window -n "~/.config/tmux/tmux.conf" -e EDITOR="$EDITOR" "${EDITOR} ~/.config/tmux/tmux.conf"

# reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux config"

# t-smart-tmux-session-manager
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

## Navigaion

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
bind-key Tab last-window

############################################################################
# Copy mode
############################################################################
# bind Enter copy-mode # enter copy mode
#
# bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi C-v send -X rectangle-toggle
# bind -T copy-mode-vi y send -X copy-selection-and-cancel
# bind -T copy-mode-vi Escape send -X cancel
# bind -T copy-mode-vi H send -X start-of-line
# bind -T copy-mode-vi L send -X end-of-line
#
# # copy to macOS clipboard
# if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "\"\$TMUX_PROGRAM\" \${TMUX_SOCKET:+-S \"\$TMUX_SOCKET\"} save-buffer - | pbcopy"'


# https://github.com/joshmedeski/sesh
bind-key "T" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '⚡  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(🔎  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)' \
)\""

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'dracula/tmux'

############################################################################
# Plugin Settings
############################################################################
set -g @dracula-plugins "cpu-usage ram-usage"
set -g @dracula-show-powerline true

set -g @extrakto_split_size "15"

set -g @sessionx-bind 'o'

run '~/.tmux/plugins/tpm/tpm'
